/////////////////
// Semantic.gs // for LESS: http://lesscss.org/
/////////////////

// Uncomment these two lines and the star-hack width/margin lines below to enable sub-pixel fix for IE6 & 7. See http://tylertate.com/blog/2012/01/05/subpixel-rounding.html
// @min-width: 960;
// @correction: 0.5 / @min-width * 100 * 1%;

// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
.clearfix() {
	*zoom:1;
	
	&:before,
	&:after {
	    content:"";
	    display:table;
	}
	&:after {
	    clear:both;
	}
}


//////////
// GRID //
//////////

.row(@icolumns:@columns, @iwidth:@width) {

	// we recalculate 
	@column-width: (@iwidth - (@gutter-width * @columns))/@columns;
	top: @column-width;
	display: block;
	width: @icolumns*(@gutter-width + @column-width);
	//margin-right: (@width*(((@gutter-width*.5)/@width)*-1))*2;
	// *width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width)-@correction;
	// *margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1)-@correction;
	.clearfix();
}
.column(@icolumns, @iwidth:@width ) {

	@column-width: (@iwidth - (@gutter-width * @columns))/@columns;

	display: inline;
	float: left;
	width: @iwidth*((((@gutter-width+@column-width)*@icolumns)-@gutter-width) / @iwidth);
	margin-right: (@iwidth*((@gutter-width*.5)/@iwidth))*2;
	// *width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width)-@correction;
	// *margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width)-@correction;
}
.column-invert(@icolumns, @iwidth:@width ) {

	@column-width: (@iwidth - (@gutter-width * @columns))/@columns;

	display: inline;
	float: right;
	width: @iwidth*((((@gutter-width+@column-width)*@icolumns)-@gutter-width) / @iwidth);
	margin-right: (@iwidth*((@gutter-width*.5)/@iwidth))*2;
	// *width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width)-@correction;
	// *margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width)-@correction;
}
.push(@offset:1,@iwidth:@width) {

	@column-width: (@iwidth - (@gutter-width * @columns))/@columns;

	margin-left: @offset*(@gutter-width + @column-width);
}
.pull(@offset:1,@iwidth:@width) {

	@column-width: (@iwidth - (@gutter-width * @icolumns))/@icolumns;

	margin-right: @iwidth*(((@gutter-width+@column-width)*@offset) / @iwidth) + @iwidth*((@gutter-width*.5)/@iwidth);
}

//////////
// FLUID //
//////////

.row-fluid(@columns:@columns) {
	display: block;
	width: @total-width-fluid*((@gutter-width + @gridsystem-width)/@gridsystem-width);
	margin: 0 @total-width-fluid*(((@gutter-width*.5)/@gridsystem-width)*-1);
	// *width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width)-@correction;
	// *margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1)-@correction;
	.clearfix();
}
.column-fluid(@x,@columns:@columns) {
	display: inline;
	float: left;
	width: @total-width-fluid*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
	margin: 0 @total-width-fluid*((@gutter-width*.5)/@gridsystem-width);
	// *width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width)-@correction;
	// *margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width)-@correction;
}
.push-fluid(@offset:1) {
	margin-left: @total-width-fluid*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width-fluid*((@gutter-width*.5)/@gridsystem-width);
}
.pull-fluid(@offset:1) {
	margin-right: @total-width-fluid*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width-fluid*((@gutter-width*.5)/@gridsystem-width);
}